{
    "messages": [
        {
            "content": "Instantiate Contract",
            "additional_kwargs": {},
            "response_metadata": {},
            "type": "human",
            "name": null,
            "id": "7cde6dbf-2ee4-45fc-8ea8-9fe737073900",
            "example": false
        },
        {
            "content": "",
            "additional_kwargs": {
                "tool_calls": [
                    {
                        "id": "call_OJcDLMZi7eZFEH8CVH83UoGN",
                        "function": {
                            "arguments": "{\"query\":\"neutrond tx wasm instantiate parameters flags deposit label admin amount docs cw20 cw721 group contract\", \"section\":\"developers\", \"max_results\":10}",
                            "name": "search"
                        },
                        "type": "function"
                    }
                ],
                "refusal": null
            },
            "response_metadata": {
                "token_usage": {
                    "completion_tokens": 2803,
                    "prompt_tokens": 593,
                    "total_tokens": 3396,
                    "completion_tokens_details": {
                        "accepted_prediction_tokens": 0,
                        "audio_tokens": 0,
                        "reasoning_tokens": 2752,
                        "rejected_prediction_tokens": 0
                    },
                    "prompt_tokens_details": {
                        "audio_tokens": 0,
                        "cached_tokens": 0
                    }
                },
                "model_name": "o3-2025-04-16",
                "system_fingerprint": null,
                "id": "chatcmpl-C57wQmqyPYtZIylPfsyEn5DITTUZ7",
                "service_tier": "default",
                "finish_reason": "tool_calls",
                "logprobs": null
            },
            "type": "ai",
            "name": null,
            "id": "run--c8ea5c47-8207-4a68-9c5b-df5bddddde9b-0",
            "example": false,
            "tool_calls": [
                {
                    "name": "search",
                    "args": {
                        "query": "neutrond tx wasm instantiate parameters flags deposit label admin amount docs cw20 cw721 group contract",
                        "section": "developers",
                        "max_results": 10
                    },
                    "id": "call_OJcDLMZi7eZFEH8CVH83UoGN",
                    "type": "tool_call"
                }
            ],
            "invalid_tool_calls": [],
            "usage_metadata": {
                "input_tokens": 593,
                "output_tokens": 2803,
                "total_tokens": 3396,
                "input_token_details": {
                    "audio": 0,
                    "cache_read": 0
                },
                "output_token_details": {
                    "audio": 0,
                    "reasoning": 2752
                }
            }
        },
        {
            "content": "Found 10 result(s) for \"neutrond tx wasm instantiate parameters flags deposit label admin amount docs cw20 cw721 group contract\":\n\n## 1. Admin Module\n**File:** /root/neutron/docs/developers/modules/admin/overview.mdx\n**Section:** developers\n**Relevance Score:** 20\n\n**Matching lines:**\n- Line 2: title: \"Admin Module\"\n- Line 3: description: \"Central governance module enabling DAO-driven network administration and proposal execution\"\n- Line 6: The admin module serves as Neutron's central governance mechanism, empowering the **Main DAO contract** to propose and execute critical network operations. Built with Cosmos SDK compatibility and upgraded for SDK 0.50, this module enables secure, controlled administration of the entire Neutron network.\n- Line 9: **Main DAO Exclusive Access**: The admin module can **only** be accessed by the Main DAO contract through WebAssembly bindings. Individual users, external contracts, and CLI commands cannot directly interact with this module. All operations must go through Neutron's DAO governance process.\n- Line 12: The admin module provides a unified interface for governance operations, supporting both legacy proposal mechanisms and modern message-based execution. Through careful whitelisting and permission controls, it ensures that only authorized operations can be performed while maintaining the flexibility needed for network evolution.\n\n**Content Preview:**\n```\n---\ntitle: \"Admin Module\"\ndescription: \"Central governance module enabling DAO-driven network administration and proposal execution\"\n\n---\n\ntitle: \"Admin Module\"\ndescription: \"Central governance module enabling DAO-driven network administration and proposal execution\"\n---\n\n---\n\n\nThe admin module serves as Neutron's central governance mechanism, empowering the **Main DAO contract** to propose and execute critical network operations. Built with Cosmos SDK compatibility and upgraded for SDK 0.50, this module enables secure, controlled administration of the entire Neutron network.\n\n```\n\n---\n\n## 2. Interchain Accounts with CosmWasm\n**File:** /root/neutron/docs/developers/tutorials/cosmwasm_ica.mdx\n**Section:** developers\n**Relevance Score:** 20\n\n**Matching lines:**\n- Line 2: title: \"Interchain Accounts with CosmWasm\"\n- Line 3: description: \"Learn how to build smart contracts that utilize interchain accounts to execute transactions on other chains\"\n- Line 6: This tutorial walks through building a smart contract that uses Neutron's Interchain Accounts (ICA) module to execute transactions on remote chains from within your contract.\n- Line 10: Interchain Accounts are a powerful IBC feature that allows a smart contract on Neutron to control accounts on other IBC-connected chains. This enables a wide range of cross-chain applications, from managing assets across chains to controlling governance on remote chains.\n- Line 23: - Have a basic understanding of CosmWasm smart contract development\n\n**Content Preview:**\n```\n---\ntitle: \"Interchain Accounts with CosmWasm\"\ndescription: \"Learn how to build smart contracts that utilize interchain accounts to execute transactions on other chains\"\n\n---\n\ntitle: \"Interchain Accounts with CosmWasm\"\ndescription: \"Learn how to build smart contracts that utilize interchain accounts to execute transactions on other chains\"\n---\n\n---\n\n\nThis tutorial walks through building a smart contract that uses Neutron's Interchain Accounts (ICA) module to execute transactions on remote chains from within your contract.\n\n```\n\n---\n\n## 3. Interchain Queries with CosmWasm\n**File:** /root/neutron/docs/developers/tutorials/cosmwasm_icq.mdx\n**Section:** developers\n**Relevance Score:** 20\n\n**Matching lines:**\n- Line 2: title: \"Interchain Queries with CosmWasm\"\n- Line 3: description: \"Learn how to build smart contracts that query data from other blockchains using Neutron's ICQ module\"\n- Line 6: This tutorial walks through building a smart contract that uses Neutron's Interchain Query (ICQ) module to query data from other blockchains. You'll learn how to register queries, process the results, and build applications that can react to state changes on connected chains.\n- Line 10: Interchain Queries are a powerful feature of Neutron that allow smart contracts to query the state of other chains in the Cosmos ecosystem. This enables developers to build cross-chain applications that can react to state changes on connected chains.\n- Line 16: 3. Build a simple contract that reacts to state changes on another chain\n\n**Content Preview:**\n```\n---\ntitle: \"Interchain Queries with CosmWasm\"\ndescription: \"Learn how to build smart contracts that query data from other blockchains using Neutron's ICQ module\"\n\n---\n\ntitle: \"Interchain Queries with CosmWasm\"\ndescription: \"Learn how to build smart contracts that query data from other blockchains using Neutron's ICQ module\"\n---\n\n---\n\n\nThis tutorial walks through building a smart contract that uses Neutron's Interchain Query (ICQ) module to query data from other blockchains. You'll learn how to register queries, process the results, and build applications that can react to state changes on connected chains.\n\n```\n\n---\n\n## 4. Smart Contract Integration Tests\n**File:** /root/neutron/docs/developers/tutorials/integration-tests/smart-contracts.mdx\n**Section:** developers\n**Relevance Score:** 20\n\n**Matching lines:**\n- Line 2: title: \"Smart Contract Integration Tests\"\n- Line 3: description: \"Test your CosmWasm smart contracts in a realistic chain environment\"\n- Line 6: This tutorial covers testing smart contracts in realistic blockchain environments using `cw-multi-test` and full chain integration tests.\n- Line 11: - Understanding of CosmWasm contract development\n- Line 17: Test individual contract functions in isolation\n\n**Content Preview:**\n```\n---\ntitle: \"Smart Contract Integration Tests\"\ndescription: \"Test your CosmWasm smart contracts in a realistic chain environment\"\n\n---\n\ntitle: \"Smart Contract Integration Tests\"\ndescription: \"Test your CosmWasm smart contracts in a realistic chain environment\"\n---\n\n---\n\n\nThis tutorial covers testing smart contracts in realistic blockchain environments using `cw-multi-test` and full chain integration tests.\n\n```\n\n---\n\n## 5. Introduction to CosmWasm\n**File:** /root/neutron/docs/developers/tutorials/introduction_to_cosmwasm.mdx\n**Section:** developers\n**Relevance Score:** 20\n\n**Matching lines:**\n- Line 2: title: \"Introduction to CosmWasm\"\n- Line 3: description: \"A gentle introduction to smart contract development on Neutron\"\n- Line 6: This tutorial provides a gentle introduction to smart contract development on Neutron using CosmWasm. You'll learn the fundamentals of smart contracts and how to build them step by step.\n- Line 8: ## What is a Smart Contract?\n- Line 10: Let's examine what a smart contract is and how it works under the hood. The following is a minimal contract that stores a counter value which can be incremented and queried by anyone.\n\n**Content Preview:**\n```\n---\ntitle: \"Introduction to CosmWasm\"\ndescription: \"A gentle introduction to smart contract development on Neutron\"\n\n---\n\ntitle: \"Introduction to CosmWasm\"\ndescription: \"A gentle introduction to smart contract development on Neutron\"\n---\n\n---\n\n\nThis tutorial provides a gentle introduction to smart contract development on Neutron using CosmWasm. You'll learn the fundamentals of smart contracts and how to build them step by step.\n\n```\n\n---\n\n## 6. Part 1: Minimal Smart Contract\n**File:** /root/neutron/docs/developers/tutorials/onboarding/part-1-minimal-application.mdx\n**Section:** developers\n**Relevance Score:** 20\n\n**Matching lines:**\n- Line 2: title: \"Part 1: Minimal Smart Contract\"\n- Line 3: description: \"Create and deploy a simple yet functional CosmWasm smart contract on Neutron\"\n- Line 6: This tutorial will guide you through creating your first smart contract on Neutron. You'll learn the basics of CosmWasm development and deploy a working application.\n- Line 10: A simple counter contract that:\n- Line 17: - [Rust](https://rustup.rs/) installed with `wasm32-unknown-unknown` target\n\n**Content Preview:**\n```\n---\ntitle: \"Part 1: Minimal Smart Contract\"\ndescription: \"Create and deploy a simple yet functional CosmWasm smart contract on Neutron\"\n\n---\n\ntitle: \"Part 1: Minimal Smart Contract\"\ndescription: \"Create and deploy a simple yet functional CosmWasm smart contract on Neutron\"\n---\n\n---\n\n\nThis tutorial will guide you through creating your first smart contract on Neutron. You'll learn the basics of CosmWasm development and deploy a working application.\n\n```\n\n---\n\n## 7. Part 2: Modules & Contracts\n**File:** /root/neutron/docs/developers/tutorials/onboarding/part-2-modules-contracts.mdx\n**Section:** developers\n**Relevance Score:** 18\n\n**Matching lines:**\n- Line 2: title: \"Part 2: Modules & Contracts\"\n- Line 3: description: \"Learn how to interact with Neutron modules and other smart contracts\"\n- Line 6: In this tutorial, you'll extend your knowledge by learning how to interact with Neutron's unique modules and call other smart contracts. This is where Neutron's power really shines.\n- Line 11: - Inter-contract communication patterns\n- Line 17: - Completed [Part 1: Minimal Smart Contract](/developers/tutorials/onboarding/part-1-minimal-application)\n\n**Content Preview:**\n```\n---\ntitle: \"Part 2: Modules & Contracts\"\ndescription: \"Learn how to interact with Neutron modules and other smart contracts\"\n\n---\n\ntitle: \"Part 2: Modules & Contracts\"\ndescription: \"Learn how to interact with Neutron modules and other smart contracts\"\n---\n\n---\n\n\nIn this tutorial, you'll extend your knowledge by learning how to interact with Neutron's unique modules and call other smart contracts. This is where Neutron's power really shines.\n\n```\n\n---\n\n## 8. Client\n**File:** /root/neutron/docs/developers/modules/dex/client.mdx\n**Section:** developers\n**Relevance Score:** 16\n\n**Matching lines:**\n- Line 13: The `neutrond` command-line interface allows users to interact with the Dex module using **positional arguments**.\n- Line 17: #### Deposit\n- Line 22: neutrond tx dex deposit [receiver] [token-a] [token-b] [amounts-a] [amounts-b] [tick-indexes] [fees] [disable-autoswap] [fail-tx-on-bel] [flags]\n- Line 25: **Parameters:**\n- Line 29: - `amounts-a`: Comma-separated amounts of token A to deposit\n\n**Content Preview:**\n```\n\nThe `neutrond` command-line interface allows users to interact with the Dex module using **positional arguments**.\n\n\n---\n\n\n#### Deposit\n\n\n---\n\n```bash\nneutrond tx dex deposit [receiver] [token-a] [token-b] [amounts-a] [amounts-b] [tick-indexes] [fees] [disable-autoswap] [fail-tx-on-bel] [flags]\n```\n```\n\n---\n\n## 9. Reference\n**File:** /root/neutron/docs/developers/modules/interchaintxs/reference.mdx\n**Section:** developers\n**Relevance Score:** 14\n\n**Matching lines:**\n- Line 6: This page provides comprehensive technical documentation for the Interchain Transactions module, combining all API specifications, message types, query endpoints, parameters, events, state structures, and integration information in a single reference document.\n- Line 9: The Interchain Transactions module is designed exclusively for CosmWasm smart contracts. Individual users cannot directly register interchain accounts or submit transactions through CLI commands.\n- Line 12: ## Parameters\n- Line 14: The Interchain Transactions module's behavior is governed by the following parameters:\n- Line 29: \"amount\": \"1000000\"\n\n**Content Preview:**\n```\n\nThis page provides comprehensive technical documentation for the Interchain Transactions module, combining all API specifications, message types, query endpoints, parameters, events, state structures, and integration information in a single reference document.\n\n\n---\n\n<Warning>\nThe Interchain Transactions module is designed exclusively for CosmWasm smart contracts. Individual users cannot directly register interchain accounts or submit transactions through CLI commands.\n</Warning>\n\n---\n\n\n## Parameters\n\n```\n\n---\n\n## 10. Overview\n**File:** /root/neutron/docs/developers/modules/tokenfactory/overview.mdx\n**Section:** developers\n**Relevance Score:** 14\n\n**Matching lines:**\n- Line 5: The Token Factory module enables users to create and manage custom tokens (denominations) on the Neutron network. It provides comprehensive token lifecycle management including creation, minting, burning, and administrative controls.\n- Line 8: **Mixed Access Control**: While users can create and manage their own tokens, module parameters (creation fees, whitelisted hooks) can only be updated through governance proposals.\n- Line 15: - **Supply Management**: Mint and burn tokens with admin controls\n- Line 17: - **Administrative Controls**: Transfer admin rights and manage token permissions\n- Line 21: - **Before-Send Hooks**: Implement custom logic for token transfers via CosmWasm contracts\n\n**Content Preview:**\n```\n\nThe Token Factory module enables users to create and manage custom tokens (denominations) on the Neutron network. It provides comprehensive token lifecycle management including creation, minting, burning, and administrative controls.\n\n\n---\n\n<Info>\n**Mixed Access Control**: While users can create and manage their own tokens, module parameters (creation fees, whitelisted hooks) can only be updated through governance proposals.\n</Info>\n\n---\n\n\n- **Supply Management**: Mint and burn tokens with admin controls\n\n```\n\n---\n\n",
            "additional_kwargs": {},
            "response_metadata": {},
            "type": "tool",
            "name": "search",
            "id": "9714a029-9b09-41a8-ba3b-08fa35391079",
            "tool_call_id": "call_OJcDLMZi7eZFEH8CVH83UoGN",
            "artifact": null,
            "status": "success"
        },
        {
            "content": "```json\n{\n  \"Deploy a simple counter contract with initial count set to 0\": {\n    \"popularity\": 95,\n    \"command\": \"neutrond tx wasm instantiate 1 '{\\\"count\\\":0}' --from alice --label \\\"simple-counter\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Instantiate a CW20 token named \\\"Test Token\\\" with 1,000,000,000 supply to my address\": {\n    \"popularity\": 90,\n    \"command\": \"neutrond tx wasm instantiate 2 '{\\\"name\\\":\\\"Test Token\\\",\\\"symbol\\\":\\\"TEST\\\",\\\"decimals\\\":6,\\\"initial_balances\\\":[{\\\"address\\\":\\\"neutron1owneraddress\\\",\\\"amount\\\":\\\"1000000000000\\\"}],\\\"mint\\\":{\\\"minter\\\":\\\"neutron1owneraddress\\\"}}' --from alice --label \\\"test-token\\\" --amount 2000000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Deploy a CW721 NFT contract called \\\"CoolNFTs\\\"\": {\n    \"popularity\": 88,\n    \"command\": \"neutrond tx wasm instantiate 3 '{\\\"name\\\":\\\"CoolNFTs\\\",\\\"symbol\\\":\\\"CNFT\\\",\\\"minter\\\":\\\"neutron1owneraddress\\\"}' --from alice --label \\\"cool-nfts\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Instantiate a cw4-group membership contract setting my multisig as admin\": {\n    \"popularity\": 85,\n    \"command\": \"neutrond tx wasm instantiate 4 '{\\\"admin\\\":\\\"neutron1multiaddress\\\",\\\"members\\\":[{\\\"addr\\\":\\\"neutron1member1\\\",\\\"weight\\\":1},{\\\"addr\\\":\\\"neutron1member2\\\",\\\"weight\\\":1}]}' --from alice --label \\\"dao-group\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Create an Interchain Accounts controller contract for the Osmosis chain\": {\n    \"popularity\": 80,\n    \"command\": \"neutrond tx wasm instantiate 5 '{\\\"connection_id\\\":\\\"connection-0\\\",\\\"interchain_account_id\\\":\\\"osmosis_delegate\\\"}' --from alice --label \\\"ica-controller\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.5 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Deploy a Token Factory before-send hook contract with DAO admin\": {\n    \"popularity\": 75,\n    \"command\": \"neutrond tx wasm instantiate 6 '{\\\"admin\\\":\\\"neutron1daoaddress\\\"}' --from alice --label \\\"tokenfactory-hook\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Instantiate a vault contract linked to Neutron DEX pool #1\": {\n    \"popularity\": 70,\n    \"command\": \"neutrond tx wasm instantiate 7 '{\\\"dex_pool_id\\\":1,\\\"owner\\\":\\\"neutron1vaultadmin\\\"}' --from alice --label \\\"dex-vault-1\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Deploy a governance staking contract with minimum stake of 1,000 NTRN\": {\n    \"popularity\": 68,\n    \"command\": \"neutrond tx wasm instantiate 8 '{\\\"denom\\\":\\\"untrn\\\",\\\"min_bond\\\":\\\"1000000000\\\",\\\"unstake_period\\\":604800}' --from alice --label \\\"gov-stake\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Instantiate a multicall router contract for batch execution\": {\n    \"popularity\": 65,\n    \"command\": \"neutrond tx wasm instantiate 9 '{\\\"owner\\\":\\\"neutron1owner\\\"}' --from alice --label \\\"multicall-router\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.2 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Deploy a fee paymaster contract that forwards fees in NTRN\": {\n    \"popularity\": 60,\n    \"command\": \"neutrond tx wasm instantiate 10 '{\\\"payer\\\":\\\"neutron1payeraddress\\\"}' --from alice --label \\\"fee-paymaster\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Instantiate a cw3 fixed multisig with 3 members and threshold 2\": {\n    \"popularity\": 58,\n    \"command\": \"neutrond tx wasm instantiate 11 '{\\\"members\\\":[{\\\"addr\\\":\\\"neutron1addr1\\\",\\\"weight\\\":1},{\\\"addr\\\":\\\"neutron1addr2\\\",\\\"weight\\\":1},{\\\"addr\\\":\\\"neutron1addr3\\\",\\\"weight\\\":1}],\\\"threshold\\\":{\\\"absolute_count\\\":{\\\"weight\\\":2}},\\\"max_voting_period\\\":{\\\"time\\\":604800}}' --from alice --label \\\"team-multisig\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.4 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Deploy a cw4-stake contract with a 14-day unbonding period\": {\n    \"popularity\": 55,\n    \"command\": \"neutrond tx wasm instantiate 12 '{\\\"denom\\\":\\\"untrn\\\",\\\"unstake_period\\\":1209600,\\\"manager\\\":\\\"neutron1manager\\\"}' --from alice --label \\\"stake-club\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Instantiate an epoch manager contract to run tasks every hour\": {\n    \"popularity\": 50,\n    \"command\": \"neutrond tx wasm instantiate 13 '{\\\"interval\\\":\\\"3600\\\",\\\"owner\\\":\\\"neutron1owner\\\"}' --from alice --label \\\"epoch-manager\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.2 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Deploy an ICS20 swap router contract for cross-chain swaps\": {\n    \"popularity\": 48,\n    \"command\": \"neutrond tx wasm instantiate 14 '{\\\"owner\\\":\\\"neutron1owner\\\",\\\"ics20_channel\\\":\\\"channel-0\\\"}' --from alice --label \\\"ics20-router\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Instantiate an ICQ manager contract for interchain queries\": {\n    \"popularity\": 45,\n    \"command\": \"neutrond tx wasm instantiate 15 '{\\\"connection_id\\\":\\\"connection-1\\\",\\\"owner\\\":\\\"neutron1owner\\\"}' --from alice --label \\\"icq-manager\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.4 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Deploy a distribution splitter contract dividing fees 50-50\": {\n    \"popularity\": 42,\n    \"command\": \"neutrond tx wasm instantiate 16 '{\\\"recipients\\\":[{\\\"addr\\\":\\\"neutron1team1\\\",\\\"percent\\\":50},{\\\"addr\\\":\\\"neutron1team2\\\",\\\"percent\\\":50}],\\\"admin\\\":\\\"neutron1admin\\\"}' --from alice --label \\\"fee-splitter\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Instantiate a yield vault contract targeting Stride staked ATOM\": {\n    \"popularity\": 40,\n    \"command\": \"neutrond tx wasm instantiate 17 '{\\\"base_denom\\\":\\\"stuatom\\\",\\\"host_chain\\\":\\\"stride\\\",\\\"owner\\\":\\\"neutron1owner\\\"}' --from alice --label \\\"stride-yield-vault\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Deploy a wrapped token minter contract for bridged JUNO\": {\n    \"popularity\": 38,\n    \"command\": \"neutrond tx wasm instantiate 18 '{\\\"original_denom\\\":\\\"ujuno\\\",\\\"wrapped_denom\\\":\\\"wujuno\\\",\\\"cap\\\":\\\"100000000000000\\\",\\\"owner\\\":\\\"neutron1owner\\\"}' --from alice --label \\\"juno-wrapper\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.4 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Instantiate a cross-chain governance relayer contract\": {\n    \"popularity\": 35,\n    \"command\": \"neutrond tx wasm instantiate 19 '{\\\"remote_dao\\\":\\\"juno1daoaddress\\\",\\\"connection_id\\\":\\\"connection-2\\\",\\\"owner\\\":\\\"neutron1owner\\\"}' --from alice --label \\\"gov-relayer\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.4 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Deploy a Quantum Gravity bridge contract for bridging ETH assets\": {\n    \"popularity\": 33,\n    \"command\": \"neutrond tx wasm instantiate 20 '{\\\"bridge_id\\\":\\\"eth\\\",\\\"owner\\\":\\\"neutron1owner\\\",\\\"fee\\\":\\\"5000untrn\\\"}' --from alice --label \\\"eth-bridge\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.5 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Instantiate a cw1-subkeys contract giving limited spend permissions\": {\n    \"popularity\": 30,\n    \"command\": \"neutrond tx wasm instantiate 21 '{\\\"name\\\":\\\"subkeys-wallet\\\",\\\"admin\\\":\\\"neutron1admin\\\"}' --from alice --label \\\"cw1-subkeys\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.2 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Deploy a rate-limited IBC transfer contract allowing 10k NTRN per hour\": {\n    \"popularity\": 28,\n    \"command\": \"neutrond tx wasm instantiate 22 '{\\\"channel_id\\\":\\\"channel-1\\\",\\\"max_amount\\\":\\\"10000000000\\\",\\\"window_seconds\\\":3600,\\\"governance\\\":\\\"neutron1dao\\\"}' --from alice --label \\\"rate-limited-ibc\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.4 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Instantiate an oracle price feed contract for ATOM/USD\": {\n    \"popularity\": 25,\n    \"command\": \"neutrond tx wasm instantiate 23 '{\\\"base\\\":\\\"ATOM\\\",\\\"quote\\\":\\\"USD\\\",\\\"admin\\\":\\\"neutron1admin\\\",\\\"timeout\\\":300}' --from alice --label \\\"price-oracle\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Deploy a time-locked vesting contract releasing team tokens over one year\": {\n    \"popularity\": 22,\n    \"command\": \"neutrond tx wasm instantiate 24 '{\\\"token_denom\\\":\\\"untrn\\\",\\\"recipient\\\":\\\"neutron1team\\\",\\\"total_amount\\\":\\\"100000000000\\\",\\\"release_start\\\":1700000000,\\\"release_end\\\":1730000000}' --from alice --label \\\"team-vesting\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.3 --yes --node https://rpc.neutron.org:443\"\n  },\n  \"Instantiate a subscription payment contract charging 100 NTRN monthly\": {\n    \"popularity\": 20,\n    \"command\": \"neutrond tx wasm instantiate 25 '{\\\"price\\\":\\\"100000000\\\",\\\"period_seconds\\\":2592000,\\\"denom\\\":\\\"untrn\\\",\\\"owner\\\":\\\"neutron1merchant\\\"}' --from alice --label \\\"subscription-service\\\" --amount 500000untrn --chain-id neutron-1 --gas auto --gas-adjustment 1.2 --yes --node https://rpc.neutron.org:443\"\n  }\n}\n```",
            "additional_kwargs": {
                "refusal": null
            },
            "response_metadata": {
                "token_usage": {
                    "completion_tokens": 12995,
                    "prompt_tokens": 4352,
                    "total_tokens": 17347,
                    "completion_tokens_details": {
                        "accepted_prediction_tokens": 0,
                        "audio_tokens": 0,
                        "reasoning_tokens": 10112,
                        "rejected_prediction_tokens": 0
                    },
                    "prompt_tokens_details": {
                        "audio_tokens": 0,
                        "cached_tokens": 0
                    }
                },
                "model_name": "o3-2025-04-16",
                "system_fingerprint": null,
                "id": "chatcmpl-C57xEf1RhCZobNDRCFLelP5iKOAK2",
                "service_tier": "default",
                "finish_reason": "stop",
                "logprobs": null
            },
            "type": "ai",
            "name": null,
            "id": "run--2ff14f8e-681e-4be1-a2ae-0149958e9eaf-0",
            "example": false,
            "tool_calls": [],
            "invalid_tool_calls": [],
            "usage_metadata": {
                "input_tokens": 4352,
                "output_tokens": 12995,
                "total_tokens": 17347,
                "input_token_details": {
                    "audio": 0,
                    "cache_read": 0
                },
                "output_token_details": {
                    "audio": 0,
                    "reasoning": 10112
                }
            }
        }
    ]
}