{
    "Build Smart Contract": {
        "Set up Neutron development environment": "100",
        "Deploy a minimal CosmWasm smart contract": "95",
        "Run a local Neutron blockchain for testing": "93",
        "Bootstrap a dApp with NeutronTemplate": "91",
        "Call Neutron native modules from a contract": "89",
        "Add Interchain Queries to a contract": "87",
        "Execute transactions via Interchain Accounts": "86",
        "Schedule automated executions with Cron": "85",
        "Create custom token denoms with TokenFactory": "84",
        "Register cross-chain state queries via ICQ": "83",
        "Handle IBC fee refunds in smart contracts": "82",
        "Write unit tests using cw-multi-test": "81",
        "Run full chain integration tests": "80",
        "Resubmit failed ops with Contract Manager": "79",
        "Build a React frontend for your contract": "78",
        "Index on-chain data with SubQuery": "77",
        "Propose global fee parameter changes": "76",
        "Submit governance proposals for Cron schedules": "75",
        "Use Neutron SDK Rust bindings": "74",
        "Handle IBC acknowledgments safely": "73",
        "Launch a cross-chain DeFi application": "72",
        "Deploy contracts to Neutron mainnet": "71",
        "Read contract state in a web app": "70",
        "Automate builds and scripts with cargo-make": "69",
        "Integrate Bull vs Bear helper library": "68",
        "Spin up local testing with Docker Compose": "67",
        "Fetch oracle price data in contracts": "66",
        "Implement modular governance hooks": "65",
        "Migrate contract versions on Neutron": "64",
        "Optimize gas usage for Neutron txs": "63",
        "Send ICS-20 IBC transfers from contract": "62",
        "Configure minimum fees via GlobalFee module": "61",
        "Create a dashboard for a Neutron dApp": "60",
        "Add wallet connect support in NextJS": "59",
        "Implement sudo handlers in contracts": "58",
        "Publish contract metadata on-chain": "57",
        "Use FeeRefunder module in IBC transfers": "56",
        "Query chain data from frontend GraphQL": "55",
        "Monitor contract events with SubQuery": "54",
        "Handle security subDAO emergency actions": "53"
    }
}