{
    "messages": [
        {
            "content": "Migrate Contract",
            "additional_kwargs": {},
            "response_metadata": {},
            "type": "human",
            "name": null,
            "id": "e2eb0952-ea92-41f6-b16a-efa34eb5120c",
            "example": false
        },
        {
            "content": "",
            "additional_kwargs": {
                "tool_calls": [
                    {
                        "id": "call_DqwZ9BD9mlvNx1WhBipWRzu3",
                        "function": {
                            "arguments": "{\"query\":\"migrate contract neutron\", \"section\":\"all\", \"max_results\":20}",
                            "name": "search"
                        },
                        "type": "function"
                    }
                ],
                "refusal": null
            },
            "response_metadata": {
                "token_usage": {
                    "completion_tokens": 164,
                    "prompt_tokens": 265,
                    "total_tokens": 429,
                    "completion_tokens_details": {
                        "accepted_prediction_tokens": 0,
                        "audio_tokens": 0,
                        "reasoning_tokens": 128,
                        "rejected_prediction_tokens": 0
                    },
                    "prompt_tokens_details": {
                        "audio_tokens": 0,
                        "cached_tokens": 0
                    }
                },
                "model_name": "o3-2025-04-16",
                "system_fingerprint": null,
                "id": "chatcmpl-C4CJDt4hYng06CuQqpRMdvOFZYoeN",
                "service_tier": "default",
                "finish_reason": "tool_calls",
                "logprobs": null
            },
            "type": "ai",
            "name": null,
            "id": "run--992fd4e7-7e8c-46c8-ba20-7aef4144881a-0",
            "example": false,
            "tool_calls": [
                {
                    "name": "search",
                    "args": {
                        "query": "migrate contract neutron",
                        "section": "all",
                        "max_results": 20
                    },
                    "id": "call_DqwZ9BD9mlvNx1WhBipWRzu3",
                    "type": "tool_call"
                }
            ],
            "invalid_tool_calls": [],
            "usage_metadata": {
                "input_tokens": 265,
                "output_tokens": 164,
                "total_tokens": 429,
                "input_token_details": {
                    "audio": 0,
                    "cache_read": 0
                },
                "output_token_details": {
                    "audio": 0,
                    "reasoning": 128
                }
            }
        },
        {
            "content": "Found 20 result(s) for \"migrate contract neutron\":\n\n## 1. Neutron Modules\n**File:** /root/neutron/docs/developers/modules/overview.mdx\n**Section:** developers\n**Relevance Score:** 20\n\n**Matching lines:**\n- Line 2: title: \"Neutron Modules\"\n- Line 5: Neutron offers several specialized modules that provide unique functionality for developers building on the platform. Each module is designed to solve specific problems commonly encountered in DeFi applications.\n- Line 9: These modules are designed for direct integration with your smart contracts and DeFi applications:\n- Line 21: Schedule automated contract executions\n- Line 28: <Card title=\"Contract Manager\" icon=\"shield\" href=\"/developers/modules/contractmanager/overview\">\n\n**Content Preview:**\n```\n---\ntitle: \"Neutron Modules\"\n---\n\n---\n\n\nNeutron offers several specialized modules that provide unique functionality for developers building on the platform. Each module is designed to solve specific problems commonly encountered in DeFi applications.\n\n\n---\n\n\nThese modules are designed for direct integration with your smart contracts and DeFi applications:\n\n```\n\n---\n\n## 2. NeutronTemplate\n**File:** /root/neutron/docs/developers/sdk/neutron-template.mdx\n**Section:** developers\n**Relevance Score:** 20\n\n**Matching lines:**\n- Line 2: title: \"NeutronTemplate\"\n- Line 3: description: \"Complete NextJS + CosmWasm template for building Neutron dApps\"\n- Line 7: NeutronTemplate is a comprehensive starting point for building NextJS applications that interact with Neutron. It includes everything needed to create a modern, full-stack dApp with wallet integration, smart contract interaction, and a polished UI.\n- Line 10: <strong>Live Demo:</strong> <a href=\"https://neutrontemplate.deploydon.com\" target=\"_blank\" className=\"text-primary hover:underline\">https://NeutronTemplate.Deploydon.com</a>\n- Line 40: <Card title=\"Smart Contract\" icon=\"file-contract\" iconType=\"duotone\">\n\n**Content Preview:**\n```\n---\ntitle: \"NeutronTemplate\"\ndescription: \"Complete NextJS + CosmWasm template for building Neutron dApps\"\n\n---\n\ntitle: \"NeutronTemplate\"\ndescription: \"Complete NextJS + CosmWasm template for building Neutron dApps\"\nicon: \"code\"\n\n---\n\n\nNeutronTemplate is a comprehensive starting point for building NextJS applications that interact with Neutron. It includes everything needed to create a modern, full-stack dApp with wallet integration, smart contract interaction, and a polished UI.\n\n```\n\n---\n\n## 3. Part 1: Minimal Smart Contract\n**File:** /root/neutron/docs/developers/tutorials/onboarding/part-1-minimal-application.mdx\n**Section:** developers\n**Relevance Score:** 20\n\n**Matching lines:**\n- Line 2: title: \"Part 1: Minimal Smart Contract\"\n- Line 3: description: \"Create and deploy a simple yet functional CosmWasm smart contract on Neutron\"\n- Line 6: This tutorial will guide you through creating your first smart contract on Neutron. You'll learn the basics of CosmWasm development and deploy a working application.\n- Line 10: A simple counter contract that:\n- Line 19: - [Docker](https://docs.docker.com/get-docker/) for contract optimization\n\n**Content Preview:**\n```\n---\ntitle: \"Part 1: Minimal Smart Contract\"\ndescription: \"Create and deploy a simple yet functional CosmWasm smart contract on Neutron\"\n\n---\n\ntitle: \"Part 1: Minimal Smart Contract\"\ndescription: \"Create and deploy a simple yet functional CosmWasm smart contract on Neutron\"\n---\n\n---\n\n\nThis tutorial will guide you through creating your first smart contract on Neutron. You'll learn the basics of CosmWasm development and deploy a working application.\n\n```\n\n---\n\n## 4. Part 2: Modules & Contracts\n**File:** /root/neutron/docs/developers/tutorials/onboarding/part-2-modules-contracts.mdx\n**Section:** developers\n**Relevance Score:** 20\n\n**Matching lines:**\n- Line 2: title: \"Part 2: Modules & Contracts\"\n- Line 3: description: \"Learn how to interact with Neutron modules and other smart contracts\"\n- Line 6: In this tutorial, you'll extend your knowledge by learning how to interact with Neutron's unique modules and call other smart contracts. This is where Neutron's power really shines.\n- Line 10: - How to use Neutron's custom modules (Oracle, Cron, ICQ)\n- Line 11: - Inter-contract communication patterns\n\n**Content Preview:**\n```\n---\ntitle: \"Part 2: Modules & Contracts\"\ndescription: \"Learn how to interact with Neutron modules and other smart contracts\"\n\n---\n\ntitle: \"Part 2: Modules & Contracts\"\ndescription: \"Learn how to interact with Neutron modules and other smart contracts\"\n---\n\n---\n\n\nIn this tutorial, you'll extend your knowledge by learning how to interact with Neutron's unique modules and call other smart contracts. This is where Neutron's power really shines.\n\n```\n\n---\n\n## 5. Bridge Contracts\n**File:** /root/neutron/docs/resources/contracts/bridge.mdx\n**Section:** resources\n**Relevance Score:** 19\n\n**Matching lines:**\n- Line 2: title: \"Bridge Contracts\"\n- Line 3: description: \"Information about Neutron's cross-chain bridge contracts\"\n- Line 7: This page provides information about the smart contracts that enable cross-chain bridging between Neutron and other networks.\n- Line 9: ## Mainnet (neutron-1)\n- Line 11: | Contract | Address | Code ID |\n\n**Content Preview:**\n```\n---\ntitle: \"Bridge Contracts\"\ndescription: \"Information about Neutron's cross-chain bridge contracts\"\n\n---\n\ntitle: \"Bridge Contracts\"\ndescription: \"Information about Neutron's cross-chain bridge contracts\"\nicon: \"bridge\"\n\n---\n\n\nThis page provides information about the smart contracts that enable cross-chain bridging between Neutron and other networks.\n\n```\n\n---\n\n## 6. Neutron DAO Contracts\n**File:** /root/neutron/docs/resources/contracts/neutron-dao.mdx\n**Section:** resources\n**Relevance Score:** 19\n\n**Matching lines:**\n- Line 2: title: \"Neutron DAO Contracts\"\n- Line 3: description: \"Addresses and information for Neutron DAO smart contracts\"\n- Line 7: This page lists the smart contracts that make up the Neutron DAO system on both mainnet and testnet networks.\n- Line 9: ## Mainnet (neutron-1)\n- Line 13: | Neutron DAO Core | `neutron1suhgf5svhu4usrurvxzlgn54ksxmn8gljarjtxqnapv8kjnp4nrstdxvff` | [cwd-core](https://github.com/neutron-org/neutron-dao) | 325 |\n\n**Content Preview:**\n```\n---\ntitle: \"Neutron DAO Contracts\"\ndescription: \"Addresses and information for Neutron DAO smart contracts\"\n\n---\n\ntitle: \"Neutron DAO Contracts\"\ndescription: \"Addresses and information for Neutron DAO smart contracts\"\nicon: \"building-columns\"\n\n---\n\n\nThis page lists the smart contracts that make up the Neutron DAO system on both mainnet and testnet networks.\n\n```\n\n---\n\n## 7. Neutron TGE Contracts\n**File:** /root/neutron/docs/resources/contracts/neutron-tge.mdx\n**Section:** resources\n**Relevance Score:** 19\n\n**Matching lines:**\n- Line 2: title: \"Neutron TGE Contracts\"\n- Line 3: description: \"Addresses and information for Neutron Token Generation Event smart contracts\"\n- Line 7: This page lists the smart contracts related to Neutron's Token Generation Event (TGE) on both mainnet and testnet networks.\n- Line 9: ## Mainnet (neutron-1)\n- Line 13: | Airdrop | `neutron198sxsrjvt2v2lln2ajn82ks76k97mj72mtgl7309jehd0vy8rezs7e6c56` | [cw20-merkle-airdrop](https://github.com/neutron-org/neutron-tge-contracts) | 196 |\n\n**Content Preview:**\n```\n---\ntitle: \"Neutron TGE Contracts\"\ndescription: \"Addresses and information for Neutron Token Generation Event smart contracts\"\n\n---\n\ntitle: \"Neutron TGE Contracts\"\ndescription: \"Addresses and information for Neutron Token Generation Event smart contracts\"\nicon: \"rocket-launch\"\n\n---\n\n\nThis page lists the smart contracts related to Neutron's Token Generation Event (TGE) on both mainnet and testnet networks.\n\n```\n\n---\n\n## 8. Neutron Vesting Contracts\n**File:** /root/neutron/docs/resources/contracts/neutron-vesting.mdx\n**Section:** resources\n**Relevance Score:** 19\n\n**Matching lines:**\n- Line 2: title: \"Neutron Vesting Contracts\"\n- Line 3: description: \"Information about Neutron's token vesting smart contracts\"\n- Line 7: This page provides information about the smart contracts that manage token vesting schedules for various Neutron token recipient groups.\n- Line 9: ## Mainnet (neutron-1)\n- Line 13: | Neutron Vesting Investors [no voting power] | `neutron14q5elxj4ghktt7d7d0uw0cs0gqyeay25h5fkree897gjm38gevxqmvqsq5` | [vesting-investors](https://github.com/neutron-org/neutron-tge-contracts) | 28 |\n\n**Content Preview:**\n```\n---\ntitle: \"Neutron Vesting Contracts\"\ndescription: \"Information about Neutron's token vesting smart contracts\"\n\n---\n\ntitle: \"Neutron Vesting Contracts\"\ndescription: \"Information about Neutron's token vesting smart contracts\"\nicon: \"clock\"\n\n---\n\n\nThis page provides information about the smart contracts that manage token vesting schedules for various Neutron token recipient groups.\n\n```\n\n---\n\n## 9. DeFi on Neutron\n**File:** /root/neutron/docs/defi/overview.mdx\n**Section:** defi\n**Relevance Score:** 19\n\n**Matching lines:**\n- Line 2: title: \"DeFi on Neutron\"\n- Line 3: description: \"Neutron's integrated financial infrastructure powers capital-efficient DeFi products\"\n- Line 7: Neutron is purpose-built for next-generation decentralized finance, offering integrated infrastructure that enables unprecedented capital efficiency, low latency, and seamless composability across a thriving ecosystem of applications.\n- Line 19: The Cron module enables scheduled, conditional, and gasless contract execution without relying on external keepers or bots, ensuring reliable automation.\n- Line 42: Neutron's architectural advantage comes from how its core modules work together to create a unified DeFi experience:\n\n**Content Preview:**\n```\n---\ntitle: \"DeFi on Neutron\"\ndescription: \"Neutron's integrated financial infrastructure powers capital-efficient DeFi products\"\n\n---\n\ntitle: \"DeFi on Neutron\"\ndescription: \"Neutron's integrated financial infrastructure powers capital-efficient DeFi products\"\nicon: \"chart-line\"\n\n---\n\n\nNeutron is purpose-built for next-generation decentralized finance, offering integrated infrastructure that enables unprecedented capital efficiency, low latency, and seamless composability across a thriving ecosystem of applications.\n\n```\n\n---\n\n## 10. SubQuery for Neutron\n**File:** /root/neutron/docs/developers/tutorials/indexers/subquery.mdx\n**Section:** developers\n**Relevance Score:** 18\n\n**Matching lines:**\n- Line 2: title: \"SubQuery for Neutron\"\n- Line 3: description: \"Learn how to set up and use SubQuery to index Neutron data\"\n- Line 6: SubQuery is a leading blockchain data indexer that provides fast, flexible APIs for web3 projects. It offers multi-chain aggregation, superior performance, a GraphQL API, and an excellent developer experience with support for 100+ ecosystems including Neutron.\n- Line 10: SubQuery offers several competitive advantages that make it ideal for building Neutron indexers:\n- Line 23: ## Getting Started with SubQuery for Neutron\n\n**Content Preview:**\n```\n---\ntitle: \"SubQuery for Neutron\"\ndescription: \"Learn how to set up and use SubQuery to index Neutron data\"\n\n---\n\ntitle: \"SubQuery for Neutron\"\ndescription: \"Learn how to set up and use SubQuery to index Neutron data\"\n---\n\n---\n\n\nSubQuery is a leading blockchain data indexer that provides fast, flexible APIs for web3 projects. It offers multi-chain aggregation, superior performance, a GraphQL API, and an excellent developer experience with support for 100+ ecosystems including Neutron.\n\n```\n\n---\n\n## 11. Smart Contract Integration Tests\n**File:** /root/neutron/docs/developers/tutorials/integration-tests/smart-contracts.mdx\n**Section:** developers\n**Relevance Score:** 18\n\n**Matching lines:**\n- Line 2: title: \"Smart Contract Integration Tests\"\n- Line 3: description: \"Test your CosmWasm smart contracts in a realistic chain environment\"\n- Line 6: This tutorial covers testing smart contracts in realistic blockchain environments using `cw-multi-test` and full chain integration tests.\n- Line 11: - Understanding of CosmWasm contract development\n- Line 17: Test individual contract functions in isolation\n\n**Content Preview:**\n```\n---\ntitle: \"Smart Contract Integration Tests\"\ndescription: \"Test your CosmWasm smart contracts in a realistic chain environment\"\n\n---\n\ntitle: \"Smart Contract Integration Tests\"\ndescription: \"Test your CosmWasm smart contracts in a realistic chain environment\"\n---\n\n---\n\n\nThis tutorial covers testing smart contracts in realistic blockchain environments using `cw-multi-test` and full chain integration tests.\n\n```\n\n---\n\n## 12. Admin Module\n**File:** /root/neutron/docs/developers/modules/admin/overview.mdx\n**Section:** developers\n**Relevance Score:** 12\n\n**Matching lines:**\n- Line 6: The admin module serves as Neutron's central governance mechanism, empowering the **Main DAO contract** to propose and execute critical network operations. Built with Cosmos SDK compatibility and upgraded for SDK 0.50, this module enables secure, controlled administration of the entire Neutron network.\n- Line 9: **Main DAO Exclusive Access**: The admin module can **only** be accessed by the Main DAO contract through WebAssembly bindings. Individual users, external contracts, and CLI commands cannot directly interact with this module. All operations must go through Neutron's DAO governance process.\n- Line 29: The admin module operates on the principle of controlled delegation, where the **Neutron Main DAO contract** acts as the network's administrator with the authority to execute proposals that can significantly change the network state. This includes:\n- Line 32: - **Smart Contract Management**: Executing WebAssembly (WASM) proposals for contract instantiation, migration, and administration\n- Line 40: 1. **Legacy Proposals**: Traditional governance proposals rooted in the Cosmos SDK's `x/gov` module, supporting predefined proposals like `MigrateContract`, `InstantiateContract`, and parameter changes. These proposals are processed through dedicated handlers and remain supported for backward compatibility with modules like IBC that haven't fully transitioned to SDK 0.47 patterns.\n\n**Content Preview:**\n```\n\nThe admin module serves as Neutron's central governance mechanism, empowering the **Main DAO contract** to propose and execute critical network operations. Built with Cosmos SDK compatibility and upgraded for SDK 0.50, this module enables secure, controlled administration of the entire Neutron network.\n\n\n---\n\n<Warning>\n**Main DAO Exclusive Access**: The admin module can **only** be accessed by the Main DAO contract through WebAssembly bindings. Individual users, external contracts, and CLI commands cannot directly interact with this module. All operations must go through Neutron's DAO governance process.\n</Warning>\n\n---\n\n\nThe admin module operates on the principle of controlled delegation, where the **Neutron Main DAO contract** acts as the network's administrator with the authority to execute proposals that can significantly change the network state. This includes:\n\n```\n\n---\n\n## 13. Technical Explanation\n**File:** /root/neutron/docs/developers/modules/admin/explanation.mdx\n**Section:** developers\n**Relevance Score:** 10\n\n**Matching lines:**\n- Line 9: **Main DAO Exclusive Access**: The admin module can only be accessed by the Main DAO contract through WebAssembly bindings. Individual users, external contracts, and CLI commands cannot directly interact with this module. All operations must go through Neutron's DAO governance process.\n- Line 14: The admin module serves as the central governance hub for the Neutron network, designed to handle administrative operations through a secure, controlled framework. The module architecture consists of several key components working together to ensure safe and effective network governance.\n- Line 41: - Custom WASM proposals for smart contract operations\n- Line 61: 1. **Submission**: Proposals are submitted through the DAO's governance contracts or directly via the admin module's message interface.\n- Line 104: ## Integration with Neutron DAO\n\n**Content Preview:**\n```\n<Warning>\n**Main DAO Exclusive Access**: The admin module can only be accessed by the Main DAO contract through WebAssembly bindings. Individual users, external contracts, and CLI commands cannot directly interact with this module. All operations must go through Neutron's DAO governance process.\n</Warning>\n\n---\n\n\nThe admin module serves as the central governance hub for the Neutron network, designed to handle administrative operations through a secure, controlled framework. The module architecture consists of several key components working together to ensure safe and effective network governance.\n\n\n---\n\n   - `TextProposal`: Governance signaling proposals\n   - Custom WASM proposals for smart contract operations\n\n```\n\n---\n\n## 14. How-to\n**File:** /root/neutron/docs/developers/modules/admin/how-to.mdx\n**Section:** developers\n**Relevance Score:** 10\n\n**Matching lines:**\n- Line 6: This guide explains how the admin module works within Neutron's governance system. Unlike other modules that users can interact with directly, the admin module is exclusively accessible by the **Main DAO contract**.\n- Line 9: The admin module cannot be used directly by individual users or external contracts. All interactions must go through Neutron's DAO governance process.\n- Line 16: - **Only the Main DAO contract** can send messages to the admin module\n- Line 25: When the Neutron community wants to execute administrative operations:\n- Line 29: 3. **Proposal Execution**: If approved, the Main DAO contract sends messages to the admin module\n\n**Content Preview:**\n```\n\nThis guide explains how the admin module works within Neutron's governance system. Unlike other modules that users can interact with directly, the admin module is exclusively accessible by the **Main DAO contract**.\n\n\n---\n\n<Warning>\nThe admin module cannot be used directly by individual users or external contracts. All interactions must go through Neutron's DAO governance process.\n</Warning>\n\n---\n\n\n- **Only the Main DAO contract** can send messages to the admin module\n- Messages are sent using WebAssembly bindings from the Main DAO\n```\n\n---\n\n## 15. How-to\n**File:** /root/neutron/docs/developers/modules/contractmanager/how-to.mdx\n**Section:** developers\n**Relevance Score:** 10\n\n**Matching lines:**\n- Line 5: This guide provides practical instructions for interacting with the Contract Manager module, including handling failures and resubmitting failed operations.\n- Line 7: ## Handling IBC Acknowledgments in Smart Contracts\n- Line 9: When developing contracts that use IBC functionality on Neutron, you need to properly handle acknowledgments:\n- Line 14: pub fn sudo(deps: DepsMut, env: Env, msg: SudoMsg) -> Result<Response, ContractError> {\n- Line 20: // Return success - failures will be captured by Contract Manager\n\n**Content Preview:**\n```\n\nThis guide provides practical instructions for interacting with the Contract Manager module, including handling failures and resubmitting failed operations.\n\n\n---\n\n\n## Handling IBC Acknowledgments in Smart Contracts\n\n\n---\n\n\nWhen developing contracts that use IBC functionality on Neutron, you need to properly handle acknowledgments:\n\n```\n\n---\n\n## 16. Understanding Cron\n**File:** /root/neutron/docs/developers/modules/cron/explanation.mdx\n**Section:** developers\n**Relevance Score:** 10\n\n**Matching lines:**\n- Line 20: **Governance-Only Access**: The Cron module is governance-gated. Only the Main DAO or Security SubDAO can create, modify, or remove schedules. Individual users and contracts cannot directly interact with this module.\n- Line 32: - One or more CosmWasm contract messages to execute\n- Line 39: The module hooks into Neutron's block production process to check for schedules due for execution:\n- Line 49: - The module constructs `wasmtypes.MsgExecuteContract` messages from the stored schedule data\n- Line 65: repeated MsgExecuteContract msgs = 3;      // Messages to execute\n\n**Content Preview:**\n```\n<Warning>\n**Governance-Only Access**: The Cron module is governance-gated. Only the Main DAO or Security SubDAO can create, modify, or remove schedules. Individual users and contracts cannot directly interact with this module.\n</Warning>\n\n---\n\n- The execution period (in blocks)\n- One or more CosmWasm contract messages to execute\n- The execution stage (BEGIN_BLOCKER or END_BLOCKER)\n\n---\n\n\nThe module hooks into Neutron's block production process to check for schedules due for execution:\n\n```\n\n---\n\n## 17. How-to\n**File:** /root/neutron/docs/developers/modules/cron/how-to.mdx\n**Section:** developers\n**Relevance Score:** 10\n\n**Matching lines:**\n- Line 6: This guide provides practical instructions for working with the Cron module, including creating governance proposals for schedules and handling scheduled executions in smart contracts.\n- Line 10: - Understanding of Neutron governance processes\n- Line 11: - Familiarity with CosmWasm contract development\n- Line 19: - Individual users and contracts cannot directly interact with this module\n- Line 29: Neutron uses a [modular governance system](/concepts/modular-governance) with specialized subDAOs that handle different aspects of network management. The Security SubDAO can remove schedules in emergency situations, providing a safety mechanism for the network.\n\n**Content Preview:**\n```\n\nThis guide provides practical instructions for working with the Cron module, including creating governance proposals for schedules and handling scheduled executions in smart contracts.\n\n\n---\n\n\n- Understanding of Neutron governance processes\n- Familiarity with CosmWasm contract development\n\n---\n\n- Understanding of Neutron governance processes\n- Familiarity with CosmWasm contract development\n- Access to governance proposal submission (for schedule creation)\n```\n\n---\n\n## 18. Cron Module\n**File:** /root/neutron/docs/developers/modules/cron/overview.mdx\n**Section:** developers\n**Relevance Score:** 10\n\n**Matching lines:**\n- Line 3: description: \"Schedule automated smart contract executions with block-based timing\"\n- Line 6: This document explains the `cron` module for the Neutron network.\n- Line 8: The Cron module allows scheduling automatic smart contract executions at predefined block intervals, similar to Unix cron jobs. This feature enables time-based automation in blockchain applications through governance-controlled schedule management.\n- Line 29: - Contracts cannot directly create schedules\n- Line 33: The Cron module operates within Neutron's [modular governance system](/concepts/modular-governance), which uses specialized subDAOs to handle different aspects of network management. The Cron SubDAO specifically manages scheduling-related proposals.\n\n**Content Preview:**\n```\ntitle: \"Cron Module\"\ndescription: \"Schedule automated smart contract executions with block-based timing\"\n---\n\n---\n\n\nThis document explains the `cron` module for the Neutron network.\n\n\n---\n\n\nThe Cron module allows scheduling automatic smart contract executions at predefined block intervals, similar to Unix cron jobs. This feature enables time-based automation in blockchain applications through governance-controlled schedule management.\n\n```\n\n---\n\n## 19. Explanation\n**File:** /root/neutron/docs/developers/modules/feeburner/explanation.mdx\n**Section:** developers\n**Relevance Score:** 10\n\n**Matching lines:**\n- Line 9: ### Fee Collection in Sovereign Neutron\n- Line 11: Following the Mercury upgrade in April 2025, Neutron operates as a fully sovereign network with its own validator set and native NTRN staking. Transaction fees collected on Neutron are processed entirely within the network through the Fee Burner module.\n- Line 20: - **Supply Contraction**: As usage of the network increases, more fees are collected and burned, creating stronger deflationary pressure\n- Line 22: This mechanism helps maintain long-term value for NTRN token holders while supporting Neutron's fixed supply tokenomics model introduced with the Mercury upgrade.\n- Line 32: The Treasury can then use these funds for ecosystem development, grants, and other initiatives as governed by the Neutron DAO.\n\n**Content Preview:**\n```\n\n### Fee Collection in Sovereign Neutron\n\n\n---\n\n\nFollowing the Mercury upgrade in April 2025, Neutron operates as a fully sovereign network with its own validator set and native NTRN staking. Transaction fees collected on Neutron are processed entirely within the network through the Fee Burner module.\n\n\n---\n\n- **Systematic Burning**: By destroying NTRN tokens collected as fees, the module reduces the total supply over time\n- **Supply Contraction**: As usage of the network increases, more fees are collected and burned, creating stronger deflationary pressure\n\n```\n\n---\n\n## 20. How-to\n**File:** /root/neutron/docs/developers/modules/feerefunder/how-to.mdx\n**Section:** developers\n**Relevance Score:** 10\n\n**Matching lines:**\n- Line 5: This guide provides practical instructions for interacting with the Fee Refunder module, primarily for smart contract developers who need to include the appropriate fees when sending IBC packets.\n- Line 7: ## For Smart Contract Developers\n- Line 17: use neutron_sdk::bindings::msg::NeutronMsg;\n- Line 18: use neutron_sdk::bindings::types::{Fee as IbcFee, Coin};\n- Line 39: let msg = NeutronMsg::IbcTransfer {\n\n**Content Preview:**\n```\n\nThis guide provides practical instructions for interacting with the Fee Refunder module, primarily for smart contract developers who need to include the appropriate fees when sending IBC packets.\n\n\n---\n\n\n## For Smart Contract Developers\n\n\n---\n\n// Import necessary types\nuse neutron_sdk::bindings::msg::NeutronMsg;\nuse neutron_sdk::bindings::types::{Fee as IbcFee, Coin};\n```\n\n---\n\n",
            "additional_kwargs": {},
            "response_metadata": {},
            "type": "tool",
            "name": "search",
            "id": "165f453e-cd99-486b-be07-89a23c172176",
            "tool_call_id": "call_DqwZ9BD9mlvNx1WhBipWRzu3",
            "artifact": null,
            "status": "success"
        },
        {
            "content": "",
            "additional_kwargs": {
                "tool_calls": [
                    {
                        "id": "call_tIcESkvrVmFENE1MroyztoDG",
                        "function": {
                            "arguments": "{\"query\":\"MigrateContract Neutron\", \"section\":\"all\", \"max_results\": 20}",
                            "name": "search"
                        },
                        "type": "function"
                    }
                ],
                "refusal": null
            },
            "response_metadata": {
                "token_usage": {
                    "completion_tokens": 422,
                    "prompt_tokens": 7055,
                    "total_tokens": 7477,
                    "completion_tokens_details": {
                        "accepted_prediction_tokens": 0,
                        "audio_tokens": 0,
                        "reasoning_tokens": 384,
                        "rejected_prediction_tokens": 0
                    },
                    "prompt_tokens_details": {
                        "audio_tokens": 0,
                        "cached_tokens": 0
                    }
                },
                "model_name": "o3-2025-04-16",
                "system_fingerprint": null,
                "id": "chatcmpl-C4CJGxDuoD69ZB3DdS4ovi0moOOqS",
                "service_tier": "default",
                "finish_reason": "tool_calls",
                "logprobs": null
            },
            "type": "ai",
            "name": null,
            "id": "run--1f379d03-30be-48e7-ab7e-6467f5e5995b-0",
            "example": false,
            "tool_calls": [
                {
                    "name": "search",
                    "args": {
                        "query": "MigrateContract Neutron",
                        "section": "all",
                        "max_results": 20
                    },
                    "id": "call_tIcESkvrVmFENE1MroyztoDG",
                    "type": "tool_call"
                }
            ],
            "invalid_tool_calls": [],
            "usage_metadata": {
                "input_tokens": 7055,
                "output_tokens": 422,
                "total_tokens": 7477,
                "input_token_details": {
                    "audio": 0,
                    "cache_read": 0
                },
                "output_token_details": {
                    "audio": 0,
                    "reasoning": 384
                }
            }
        },
        {
            "content": "Found 20 result(s) for \"MigrateContract Neutron\":\n\n## 1. Neutron Modules\n**File:** /root/neutron/docs/developers/modules/overview.mdx\n**Section:** developers\n**Relevance Score:** 18\n\n**Matching lines:**\n- Line 2: title: \"Neutron Modules\"\n- Line 5: Neutron offers several specialized modules that provide unique functionality for developers building on the platform. Each module is designed to solve specific problems commonly encountered in DeFi applications.\n- Line 73: Most Neutron modules follow consistent patterns when used in CosmWasm smart contracts:\n- Line 77: use neutron_sdk::interchain_queries::...; // for ICQ\n- Line 78: use neutron_sdk::bindings::...; // for other modules\n\n**Content Preview:**\n```\n---\ntitle: \"Neutron Modules\"\n---\n\n---\n\n\nNeutron offers several specialized modules that provide unique functionality for developers building on the platform. Each module is designed to solve specific problems commonly encountered in DeFi applications.\n\n\n---\n\n\nMost Neutron modules follow consistent patterns when used in CosmWasm smart contracts:\n\n```\n\n---\n\n## 2. NeutronTemplate\n**File:** /root/neutron/docs/developers/sdk/neutron-template.mdx\n**Section:** developers\n**Relevance Score:** 18\n\n**Matching lines:**\n- Line 2: title: \"NeutronTemplate\"\n- Line 3: description: \"Complete NextJS + CosmWasm template for building Neutron dApps\"\n- Line 7: NeutronTemplate is a comprehensive starting point for building NextJS applications that interact with Neutron. It includes everything needed to create a modern, full-stack dApp with wallet integration, smart contract interaction, and a polished UI.\n- Line 10: <strong>Live Demo:</strong> <a href=\"https://neutrontemplate.deploydon.com\" target=\"_blank\" className=\"text-primary hover:underline\">https://NeutronTemplate.Deploydon.com</a>\n- Line 65: git clone https://github.com/Deploydon/NeutronTemplate.git\n\n**Content Preview:**\n```\n---\ntitle: \"NeutronTemplate\"\ndescription: \"Complete NextJS + CosmWasm template for building Neutron dApps\"\n\n---\n\ntitle: \"NeutronTemplate\"\ndescription: \"Complete NextJS + CosmWasm template for building Neutron dApps\"\nicon: \"code\"\n\n---\n\n\nNeutronTemplate is a comprehensive starting point for building NextJS applications that interact with Neutron. It includes everything needed to create a modern, full-stack dApp with wallet integration, smart contract interaction, and a polished UI.\n\n```\n\n---\n\n## 3. SubQuery for Neutron\n**File:** /root/neutron/docs/developers/tutorials/indexers/subquery.mdx\n**Section:** developers\n**Relevance Score:** 18\n\n**Matching lines:**\n- Line 2: title: \"SubQuery for Neutron\"\n- Line 3: description: \"Learn how to set up and use SubQuery to index Neutron data\"\n- Line 6: SubQuery is a leading blockchain data indexer that provides fast, flexible APIs for web3 projects. It offers multi-chain aggregation, superior performance, a GraphQL API, and an excellent developer experience with support for 100+ ecosystems including Neutron.\n- Line 10: SubQuery offers several competitive advantages that make it ideal for building Neutron indexers:\n- Line 23: ## Getting Started with SubQuery for Neutron\n\n**Content Preview:**\n```\n---\ntitle: \"SubQuery for Neutron\"\ndescription: \"Learn how to set up and use SubQuery to index Neutron data\"\n\n---\n\ntitle: \"SubQuery for Neutron\"\ndescription: \"Learn how to set up and use SubQuery to index Neutron data\"\n---\n\n---\n\n\nSubQuery is a leading blockchain data indexer that provides fast, flexible APIs for web3 projects. It offers multi-chain aggregation, superior performance, a GraphQL API, and an excellent developer experience with support for 100+ ecosystems including Neutron.\n\n```\n\n---\n\n## 4. Neutron DAO Contracts\n**File:** /root/neutron/docs/resources/contracts/neutron-dao.mdx\n**Section:** resources\n**Relevance Score:** 17\n\n**Matching lines:**\n- Line 2: title: \"Neutron DAO Contracts\"\n- Line 3: description: \"Addresses and information for Neutron DAO smart contracts\"\n- Line 7: This page lists the smart contracts that make up the Neutron DAO system on both mainnet and testnet networks.\n- Line 9: ## Mainnet (neutron-1)\n- Line 13: | Neutron DAO Core | `neutron1suhgf5svhu4usrurvxzlgn54ksxmn8gljarjtxqnapv8kjnp4nrstdxvff` | [cwd-core](https://github.com/neutron-org/neutron-dao) | 325 |\n\n**Content Preview:**\n```\n---\ntitle: \"Neutron DAO Contracts\"\ndescription: \"Addresses and information for Neutron DAO smart contracts\"\n\n---\n\ntitle: \"Neutron DAO Contracts\"\ndescription: \"Addresses and information for Neutron DAO smart contracts\"\nicon: \"building-columns\"\n\n---\n\n\nThis page lists the smart contracts that make up the Neutron DAO system on both mainnet and testnet networks.\n\n```\n\n---\n\n## 5. Neutron TGE Contracts\n**File:** /root/neutron/docs/resources/contracts/neutron-tge.mdx\n**Section:** resources\n**Relevance Score:** 17\n\n**Matching lines:**\n- Line 2: title: \"Neutron TGE Contracts\"\n- Line 3: description: \"Addresses and information for Neutron Token Generation Event smart contracts\"\n- Line 7: This page lists the smart contracts related to Neutron's Token Generation Event (TGE) on both mainnet and testnet networks.\n- Line 9: ## Mainnet (neutron-1)\n- Line 13: | Airdrop | `neutron198sxsrjvt2v2lln2ajn82ks76k97mj72mtgl7309jehd0vy8rezs7e6c56` | [cw20-merkle-airdrop](https://github.com/neutron-org/neutron-tge-contracts) | 196 |\n\n**Content Preview:**\n```\n---\ntitle: \"Neutron TGE Contracts\"\ndescription: \"Addresses and information for Neutron Token Generation Event smart contracts\"\n\n---\n\ntitle: \"Neutron TGE Contracts\"\ndescription: \"Addresses and information for Neutron Token Generation Event smart contracts\"\nicon: \"rocket-launch\"\n\n---\n\n\nThis page lists the smart contracts related to Neutron's Token Generation Event (TGE) on both mainnet and testnet networks.\n\n```\n\n---\n\n## 6. Neutron Vesting Contracts\n**File:** /root/neutron/docs/resources/contracts/neutron-vesting.mdx\n**Section:** resources\n**Relevance Score:** 17\n\n**Matching lines:**\n- Line 2: title: \"Neutron Vesting Contracts\"\n- Line 3: description: \"Information about Neutron's token vesting smart contracts\"\n- Line 7: This page provides information about the smart contracts that manage token vesting schedules for various Neutron token recipient groups.\n- Line 9: ## Mainnet (neutron-1)\n- Line 13: | Neutron Vesting Investors [no voting power] | `neutron14q5elxj4ghktt7d7d0uw0cs0gqyeay25h5fkree897gjm38gevxqmvqsq5` | [vesting-investors](https://github.com/neutron-org/neutron-tge-contracts) | 28 |\n\n**Content Preview:**\n```\n---\ntitle: \"Neutron Vesting Contracts\"\ndescription: \"Information about Neutron's token vesting smart contracts\"\n\n---\n\ntitle: \"Neutron Vesting Contracts\"\ndescription: \"Information about Neutron's token vesting smart contracts\"\nicon: \"clock\"\n\n---\n\n\nThis page provides information about the smart contracts that manage token vesting schedules for various Neutron token recipient groups.\n\n```\n\n---\n\n## 7. DeFi on Neutron\n**File:** /root/neutron/docs/defi/overview.mdx\n**Section:** defi\n**Relevance Score:** 17\n\n**Matching lines:**\n- Line 2: title: \"DeFi on Neutron\"\n- Line 3: description: \"Neutron's integrated financial infrastructure powers capital-efficient DeFi products\"\n- Line 7: Neutron is purpose-built for next-generation decentralized finance, offering integrated infrastructure that enables unprecedented capital efficiency, low latency, and seamless composability across a thriving ecosystem of applications.\n- Line 42: Neutron's architectural advantage comes from how its core modules work together to create a unified DeFi experience:\n- Line 45: <strong>The Neutron DeFi advantage:</strong>\n\n**Content Preview:**\n```\n---\ntitle: \"DeFi on Neutron\"\ndescription: \"Neutron's integrated financial infrastructure powers capital-efficient DeFi products\"\n\n---\n\ntitle: \"DeFi on Neutron\"\ndescription: \"Neutron's integrated financial infrastructure powers capital-efficient DeFi products\"\nicon: \"chart-line\"\n\n---\n\n\nNeutron is purpose-built for next-generation decentralized finance, offering integrated infrastructure that enables unprecedented capital efficiency, low latency, and seamless composability across a thriving ecosystem of applications.\n\n```\n\n---\n\n## 8. Admin Module\n**File:** /root/neutron/docs/developers/modules/admin/overview.mdx\n**Section:** developers\n**Relevance Score:** 10\n\n**Matching lines:**\n- Line 6: The admin module serves as Neutron's central governance mechanism, empowering the **Main DAO contract** to propose and execute critical network operations. Built with Cosmos SDK compatibility and upgraded for SDK 0.50, this module enables secure, controlled administration of the entire Neutron network.\n- Line 9: **Main DAO Exclusive Access**: The admin module can **only** be accessed by the Main DAO contract through WebAssembly bindings. Individual users, external contracts, and CLI commands cannot directly interact with this module. All operations must go through Neutron's DAO governance process.\n- Line 29: The admin module operates on the principle of controlled delegation, where the **Neutron Main DAO contract** acts as the network's administrator with the authority to execute proposals that can significantly change the network state. This includes:\n- Line 40: 1. **Legacy Proposals**: Traditional governance proposals rooted in the Cosmos SDK's `x/gov` module, supporting predefined proposals like `MigrateContract`, `InstantiateContract`, and parameter changes. These proposals are processed through dedicated handlers and remain supported for backward compatibility with modules like IBC that haven't fully transitioned to SDK 0.47 patterns.\n- Line 50: The admin module is exclusively accessible through Neutron's Main DAO contract via WebAssembly bindings. This tight integration ensures that all network administration flows through the democratic governance process while maintaining the technical capability to execute complex administrative operations.\n\n**Content Preview:**\n```\n\nThe admin module serves as Neutron's central governance mechanism, empowering the **Main DAO contract** to propose and execute critical network operations. Built with Cosmos SDK compatibility and upgraded for SDK 0.50, this module enables secure, controlled administration of the entire Neutron network.\n\n\n---\n\n<Warning>\n**Main DAO Exclusive Access**: The admin module can **only** be accessed by the Main DAO contract through WebAssembly bindings. Individual users, external contracts, and CLI commands cannot directly interact with this module. All operations must go through Neutron's DAO governance process.\n</Warning>\n\n---\n\n\nThe admin module operates on the principle of controlled delegation, where the **Neutron Main DAO contract** acts as the network's administrator with the authority to execute proposals that can significantly change the network state. This includes:\n\n```\n\n---\n\n## 9. Frequently Asked Questions\n**File:** /root/neutron/docs/developers/faq.mdx\n**Section:** developers\n**Relevance Score:** 8\n\n**Matching lines:**\n- Line 3: description: \"Answers to common technical questions about Neutron development\"\n- Line 12: <li><a href=\"https://t.me/+Q6C_kb0xLaoxYzE1\" target=\"_blank\" className=\"text-primary hover:underline\">Neutron Builders Announcements</a></li>\n- Line 13: <li><a href=\"https://t.me/+b9f8m8iybLdhYjE9\" target=\"_blank\" className=\"text-primary hover:underline\">Neutron Builders Chat</a></li>\n- Line 21: <Card title=\"Bug Bounty\" icon=\"bug\" iconType=\"duotone\" href=\"https://immunefi.com/bug-bounty/neutron\" target=\"_blank\">\n- Line 30: Check out our bug bounty program on <a href=\"https://immunefi.com/bug-bounty/neutron\" target=\"_blank\" className=\"text-primary hover:underline\">Immunefi</a>.\n\n**Content Preview:**\n```\ntitle: \"Frequently Asked Questions\"\ndescription: \"Answers to common technical questions about Neutron development\"\nicon: \"circle-question\"\n\n---\n\n    <ul className=\"mt-2 space-y-1\">\n      <li><a href=\"https://t.me/+Q6C_kb0xLaoxYzE1\" target=\"_blank\" className=\"text-primary hover:underline\">Neutron Builders Announcements</a></li>\n      <li><a href=\"https://t.me/+b9f8m8iybLdhYjE9\" target=\"_blank\" className=\"text-primary hover:underline\">Neutron Builders Chat</a></li>\n\n---\n\n      <li><a href=\"https://t.me/+Q6C_kb0xLaoxYzE1\" target=\"_blank\" className=\"text-primary hover:underline\">Neutron Builders Announcements</a></li>\n      <li><a href=\"https://t.me/+b9f8m8iybLdhYjE9\" target=\"_blank\" className=\"text-primary hover:underline\">Neutron Builders Chat</a></li>\n    </ul>\n```\n\n---\n\n## 10. Technical Explanation\n**File:** /root/neutron/docs/developers/modules/admin/explanation.mdx\n**Section:** developers\n**Relevance Score:** 8\n\n**Matching lines:**\n- Line 9: **Main DAO Exclusive Access**: The admin module can only be accessed by the Main DAO contract through WebAssembly bindings. Individual users, external contracts, and CLI commands cannot directly interact with this module. All operations must go through Neutron's DAO governance process.\n- Line 14: The admin module serves as the central governance hub for the Neutron network, designed to handle administrative operations through a secure, controlled framework. The module architecture consists of several key components working together to ensure safe and effective network governance.\n- Line 104: ## Integration with Neutron DAO\n- Line 108: The admin module integrates with Neutron's DAO through specialized WASM bindings:\n- Line 198: This technical foundation ensures that the admin module can serve as a reliable, secure, and efficient governance mechanism for the Neutron network while maintaining the flexibility needed for future evolution.\n\n**Content Preview:**\n```\n<Warning>\n**Main DAO Exclusive Access**: The admin module can only be accessed by the Main DAO contract through WebAssembly bindings. Individual users, external contracts, and CLI commands cannot directly interact with this module. All operations must go through Neutron's DAO governance process.\n</Warning>\n\n---\n\n\nThe admin module serves as the central governance hub for the Neutron network, designed to handle administrative operations through a secure, controlled framework. The module architecture consists of several key components working together to ensure safe and effective network governance.\n\n\n---\n\n\n## Integration with Neutron DAO\n\n```\n\n---\n\n## 11. How-to\n**File:** /root/neutron/docs/developers/modules/admin/how-to.mdx\n**Section:** developers\n**Relevance Score:** 8\n\n**Matching lines:**\n- Line 6: This guide explains how the admin module works within Neutron's governance system. Unlike other modules that users can interact with directly, the admin module is exclusively accessible by the **Main DAO contract**.\n- Line 9: The admin module cannot be used directly by individual users or external contracts. All interactions must go through Neutron's DAO governance process.\n- Line 25: When the Neutron community wants to execute administrative operations:\n- Line 43: Neutron does **not** use the standard Cosmos SDK `gov` module for proposals. All governance goes through the Main DAO contract via WASM execution.\n- Line 50: - **[governance.neutron.org](https://governance.neutron.org)** - Official governance interface\n\n**Content Preview:**\n```\n\nThis guide explains how the admin module works within Neutron's governance system. Unlike other modules that users can interact with directly, the admin module is exclusively accessible by the **Main DAO contract**.\n\n\n---\n\n<Warning>\nThe admin module cannot be used directly by individual users or external contracts. All interactions must go through Neutron's DAO governance process.\n</Warning>\n\n---\n\n\nWhen the Neutron community wants to execute administrative operations:\n\n```\n\n---\n\n## 12. How-to\n**File:** /root/neutron/docs/developers/modules/contractmanager/how-to.mdx\n**Section:** developers\n**Relevance Score:** 8\n\n**Matching lines:**\n- Line 9: When developing contracts that use IBC functionality on Neutron, you need to properly handle acknowledgments:\n- Line 42: neutrond query contractmanager failures [contract-address]\n- Line 50: \"address\": \"neutron1...\",\n- Line 69: let request = NeutronQuery::ContractManagerFailures {\n- Line 83: neutrond query contractmanager failure-details [address] [failure_id]\n\n**Content Preview:**\n```\n\nWhen developing contracts that use IBC functionality on Neutron, you need to properly handle acknowledgments:\n\n\n---\n\n```bash\nneutrond query contractmanager failures [contract-address]\n```\n\n---\n\n    {\n      \"address\": \"neutron1...\",\n      \"id\": \"1\",\n```\n\n---\n\n## 13. How-to\n**File:** /root/neutron/docs/developers/modules/cron/how-to.mdx\n**Section:** developers\n**Relevance Score:** 8\n\n**Matching lines:**\n- Line 10: - Understanding of Neutron governance processes\n- Line 29: Neutron uses a [modular governance system](/concepts/modular-governance) with specialized subDAOs that handle different aspects of network management. The Security SubDAO can remove schedules in emergency situations, providing a safety mechanism for the network.\n- Line 44: \"@type\": \"/neutron.cron.MsgAddSchedule\",\n- Line 45: \"authority\": \"neutron1...\",\n- Line 50: \"contract\": \"neutron1contract...\",\n\n**Content Preview:**\n```\n\n- Understanding of Neutron governance processes\n- Familiarity with CosmWasm contract development\n\n---\n\n<Note>\nNeutron uses a [modular governance system](/concepts/modular-governance) with specialized subDAOs that handle different aspects of network management. The Security SubDAO can remove schedules in emergency situations, providing a safety mechanism for the network.\n</Note>\n\n---\n\n    {\n      \"@type\": \"/neutron.cron.MsgAddSchedule\",\n      \"authority\": \"neutron1...\",\n```\n\n---\n\n## 14. Reference\n**File:** /root/neutron/docs/developers/modules/cron/reference.mdx\n**Section:** developers\n**Relevance Score:** 8\n\n**Matching lines:**\n- Line 113: neutrond query cron params\n- Line 118: /neutron/cron/params\n- Line 127: neutrond query cron show-schedule [schedule-name]\n- Line 132: /neutron/cron/schedule/{name}\n- Line 141: neutrond query cron list-schedule\n\n**Content Preview:**\n```\n```bash\nneutrond query cron params\n```\n\n---\n\n```\n/neutron/cron/params\n```\n\n---\n\n```bash\nneutrond query cron show-schedule [schedule-name]\n```\n```\n\n---\n\n## 15. DEX API\n**File:** /root/neutron/docs/developers/modules/dex/api.mdx\n**Section:** developers\n**Relevance Score:** 8\n\n**Matching lines:**\n- Line 13: GET /neutron/dex/pool/{pool_id}\n- Line 21: GET /neutron/dex/pool/{pair_id}/{tick_index}/{fee}\n- Line 34: GET /neutron/dex/pool_reserves/{pair_id}/{token_in}/{tick_index}/{fee}\n- Line 42: GET /neutron/dex/pool_reserves/{pair_id}/{token_in}\n- Line 50: GET /neutron/dex/pool_metadata/{id}\n\n**Content Preview:**\n```\n```\nGET /neutron/dex/pool/{pool_id}\n```\n\n---\n\n```\nGET /neutron/dex/pool/{pair_id}/{tick_index}/{fee}\n```\n\n---\n\n```\nGET /neutron/dex/pool_reserves/{pair_id}/{token_in}/{tick_index}/{fee}\n```\n```\n\n---\n\n## 16. Client\n**File:** /root/neutron/docs/developers/modules/dex/client.mdx\n**Section:** developers\n**Relevance Score:** 8\n\n**Matching lines:**\n- Line 13: The `neutrond` command-line interface allows users to interact with the Dex module using **positional arguments**.\n- Line 22: neutrond tx dex deposit [receiver] [token-a] [token-b] [amounts-a] [amounts-b] [tick-indexes] [fees] [disable-autoswap] [fail-tx-on-bel] [flags]\n- Line 43: neutrond tx dex deposit \\\n- Line 54: --chain-id neutron-1\n- Line 59: neutrond tx dex deposit \\\n\n**Content Preview:**\n```\n\nThe `neutrond` command-line interface allows users to interact with the Dex module using **positional arguments**.\n\n\n---\n\n```bash\nneutrond tx dex deposit [receiver] [token-a] [token-b] [amounts-a] [amounts-b] [tick-indexes] [fees] [disable-autoswap] [fail-tx-on-bel] [flags]\n```\n\n---\n\n```bash\nneutrond tx dex deposit \\\n  alice \\\n```\n\n---\n\n## 17. How-to\n**File:** /root/neutron/docs/developers/modules/dex/how-to.mdx\n**Section:** developers\n**Relevance Score:** 8\n\n**Matching lines:**\n- Line 3: description: \"Practical guide for using Neutron's DEX module\"\n- Line 6: This guide provides practical examples for interacting with Neutron's DEX module through the web interface and command-line tools.\n- Line 10: ### Neutron App (Web Interface)\n- Line 12: The primary web interface is available at [app.neutron.org](https://app.neutron.org)\n- Line 16: Access the orderbook at [app.neutron.org/orderbook](https://app.neutron.org/orderbook)\n\n**Content Preview:**\n```\ntitle: \"How-to\"\ndescription: \"Practical guide for using Neutron's DEX module\"\n---\n\n---\n\n\nThis guide provides practical examples for interacting with Neutron's DEX module through the web interface and command-line tools.\n\n\n---\n\n\n### Neutron App (Web Interface)\n\n```\n\n---\n\n## 18. Messages\n**File:** /root/neutron/docs/developers/modules/dex/messages.mdx\n**Section:** developers\n**Relevance Score:** 8\n\n**Matching lines:**\n- Line 183: (gogoproto.customtype) = \"github.com/neutron-org/neutron/v6/utils/math.PrecDec\",\n- Line 187: (gogoproto.customtype) = \"github.com/neutron-org/neutron/v6/utils/math.PrecDec\",\n- Line 352: (gogoproto.customtype) = \"github.com/neutron-org/neutron/v6/utils/math.PrecDec\",\n- Line 457: \"@type\": \"/neutron.dex.MsgUpdateParams\",\n- Line 458: \"authority\": \"neutron1...\", // governance authority address\n\n**Content Preview:**\n```\n  string limit_sell_price = 11 [\n    (gogoproto.customtype) = \"github.com/neutron-org/neutron/v6/utils/math.PrecDec\",\n    (gogoproto.nullable) = true\n\n---\n\n  string min_average_sell_price = 12 [\n    (gogoproto.customtype) = \"github.com/neutron-org/neutron/v6/utils/math.PrecDec\",\n    (gogoproto.nullable) = true\n\n---\n\n  string exit_limit_price = 5 [\n    (gogoproto.customtype) = \"github.com/neutron-org/neutron/v6/utils/math.PrecDec\",\n    (gogoproto.nullable) = false\n```\n\n---\n\n## 19. Overview\n**File:** /root/neutron/docs/developers/modules/dex/overview.mdx\n**Section:** developers\n**Relevance Score:** 8\n\n**Matching lines:**\n- Line 5: The Dex module implements a decentralized exchange on Neutron, providing users with the ability to trade tokens, provide liquidity, and place limit orders. The module introduces a novel AMM design centered around constant-price liquidity pools that offer simplicity, flexibility, and capital efficiency.\n- Line 8: **Duality Orderbook**: This module powers Duality, Neutron's protocol-native orderbook that combines the advantages of orderbooks and AMMs. For a complete overview of Duality's features, architecture, and ecosystem integrations, see the [Duality documentation](/defi/duality).\n- Line 15: The fundamental building block of Neutron DEX is the constant-price liquidity pool, where liquidity is concentrated at specific price points (ticks). This design:\n- Line 23: Neutron DEX supports multiple trading mechanisms:\n- Line 31: Neutron DEX reduces liquidity fragmentation through its shared liquidity model:\n\n**Content Preview:**\n```\n\nThe Dex module implements a decentralized exchange on Neutron, providing users with the ability to trade tokens, provide liquidity, and place limit orders. The module introduces a novel AMM design centered around constant-price liquidity pools that offer simplicity, flexibility, and capital efficiency.\n\n\n---\n\n<Info>\n**Duality Orderbook**: This module powers Duality, Neutron's protocol-native orderbook that combines the advantages of orderbooks and AMMs. For a complete overview of Duality's features, architecture, and ecosystem integrations, see the [Duality documentation](/defi/duality).\n</Info>\n\n---\n\n\nThe fundamental building block of Neutron DEX is the constant-price liquidity pool, where liquidity is concentrated at specific price points (ticks). This design:\n\n```\n\n---\n\n## 20. How-to\n**File:** /root/neutron/docs/developers/modules/dynamicfees/how-to.mdx\n**Section:** developers\n**Relevance Score:** 8\n\n**Matching lines:**\n- Line 32: \"@type\": \"/neutron.dynamicfees.MsgUpdateParams\",\n- Line 33: \"authority\": \"neutron10d07y265gmmuvt4z0w9aw880jnsr700j6zn9kn\", // governance authority\n- Line 60: neutrond tx gov submit-proposal proposal.json \\\n- Line 73: neutrond tx gov vote 123 yes \\\n- Line 88: \"@type\": \"/neutron.dynamicfees.MsgUpdateParams\",\n\n**Content Preview:**\n```\n    {\n      \"@type\": \"/neutron.dynamicfees.MsgUpdateParams\",\n      \"authority\": \"neutron10d07y265gmmuvt4z0w9aw880jnsr700j6zn9kn\", // governance authority\n\n---\n\n      \"@type\": \"/neutron.dynamicfees.MsgUpdateParams\",\n      \"authority\": \"neutron10d07y265gmmuvt4z0w9aw880jnsr700j6zn9kn\", // governance authority\n      \"params\": {\n\n---\n\n```bash\nneutrond tx gov submit-proposal proposal.json \\\n  --from your-key \\\n```\n\n---\n\n",
            "additional_kwargs": {},
            "response_metadata": {},
            "type": "tool",
            "name": "search",
            "id": "791d6676-a274-4ecd-8d1e-fe520cc46dba",
            "tool_call_id": "call_tIcESkvrVmFENE1MroyztoDG",
            "artifact": null,
            "status": "success"
        },
        {
            "content": "{\n  \"Submit DAO proposal to migrate an existing CosmWasm contract to a new code ID\":\"100\",\n  \"Upload new WASM bytecode to Neutron chain for migration\":\"95\",\n  \"Query current code ID and admin of a contract before migration\":\"90\",\n  \"Estimate gas and fees for contract migration\":\"85\",\n  \"Simulate contract migration on Neutron testnet before mainnet execution\":\"80\",\n  \"Vote on an ongoing MigrateContract governance proposal\":\"78\",\n  \"View history of past contract migrations on-chain\":\"75\",\n  \"Check Contract Manager failure logs after migration execution\":\"72\",\n  \"Change contract admin as part of the migration operation\":\"70\",\n  \"Roll back a contract migration via emergency governance action\":\"68\",\n  \"Customize migrate message parameters for the new contract version\":\"66\",\n  \"Migrate Cron-scheduled contract tasks to the updated code\":\"64\",\n  \"Handle IBC acknowledgments safely during contract migration\":\"62\",\n  \"Run integration tests to verify migration compatibility\":\"60\",\n  \"Update SubQuery indexer mappings for a migrated contract\":\"58\",\n  \"Migrate Neutron DAO core contracts to an upgraded code base\":\"56\",\n  \"Migrate cross-chain bridge contract to a newer version\":\"54\",\n  \"Migrate vesting contract to patch a discovered bug\":\"52\",\n  \"Submit a legacy x/gov MigrateContract proposal through Admin module\":\"50\",\n  \"Query Admin module to confirm migration execution status\":\"48\",\n  \"Audit new WASM code for security issues before migration\":\"46\",\n  \"Craft and broadcast `wasm migrate` transaction via neutrond CLI\":\"44\",\n  \"Resubmit a failed migration operation captured by Contract Manager\":\"42\",\n  \"Generate JSON payload for a migrate-contract governance proposal\":\"40\",\n  \"Schedule an automated migration execution window via Cron SubDAO\":\"38\"\n}",
            "additional_kwargs": {
                "refusal": null
            },
            "response_metadata": {
                "token_usage": {
                    "completion_tokens": 1809,
                    "prompt_tokens": 14146,
                    "total_tokens": 15955,
                    "completion_tokens_details": {
                        "accepted_prediction_tokens": 0,
                        "audio_tokens": 0,
                        "reasoning_tokens": 1408,
                        "rejected_prediction_tokens": 0
                    },
                    "prompt_tokens_details": {
                        "audio_tokens": 0,
                        "cached_tokens": 0
                    }
                },
                "model_name": "o3-2025-04-16",
                "system_fingerprint": null,
                "id": "chatcmpl-C4CK7xPLGQcDtxCw1HeXsGi9cIxhk",
                "service_tier": "default",
                "finish_reason": "stop",
                "logprobs": null
            },
            "type": "ai",
            "name": null,
            "id": "run--0cd07006-cff7-4c5d-a305-9dcc8b55d03d-0",
            "example": false,
            "tool_calls": [],
            "invalid_tool_calls": [],
            "usage_metadata": {
                "input_tokens": 14146,
                "output_tokens": 1809,
                "total_tokens": 15955,
                "input_token_details": {
                    "audio": 0,
                    "cache_read": 0
                },
                "output_token_details": {
                    "audio": 0,
                    "reasoning": 1408
                }
            }
        }
    ]
}