Below is an example JSON schema that groups three components—one for the Crowdfund (an example structure), one for the CW721 NFT contract, and one for the Splitter. The Crowdfund section is represented as a simple stand-in or wrapper around the “selling of NFTs” logic (you might use a Marketplace contract under the hood). The CW721 section is used to define how the NFTs will be minted, and the Splitter section configures the 80/20 split.

--------------------------------------------------------------------------------
{
  "Crowdfund": {
    "description": "Crowdfund component that starts an NFT sale and tracks fundraising status.",
    "schema": {
      "project_name": "My Awesome Project",
      "funding_goal": "100000000", 
      "deadline": "1680000000000", 
      "kernel_address": "andr1kernel...", 
      "owner": "andr1owner..."
    }
  },
  "CW721": {
    "description": "CW721 component responsible for minting NFTs.",
    "schema": {
      "name": "Crowdfund NFTs",
      "symbol": "CNFT",
      "minter": "andr1owner...", 
      "kernel_address": "andr1kernel..."
    }
  },
  "Splitter": {
    "description": "Splits the raised funds 80/20 between two addresses once the sale/funding ends.",
    "schema": {
      "recipients": [
        {
          "recipient": {
            "address": "andr1recipient1..."
          },
          "percent": "0.8"
        },
        {
          "recipient": {
            "address": "andr1recipient2..."
          },
          "percent": "0.2"
        }
      ],
      "lock_time": null,
      "kernel_address": "andr1kernel...",
      "owner": "andr1owner..."
    }
  }
}
--------------------------------------------------------------------------------

Explanation of properties:
• Crowdfund:  
  • project_name, funding_goal, and deadline are illustrative fields often found in a crowdfunding flow.  
  • kernel_address and owner follow the same pattern seen in other ADOs (e.g., a kernel for inter-contract messaging; owner for administrative actions).
• CW721:  
  • name, symbol, minter are standard fields to define and control an NFT.  
  • kernel_address is optional unless you require AMP (kernel) messaging.
• Splitter:  
  • recipients is the list of distribution addresses and their share percentages (must total ≤ 1.0).  
  • lock_time is set to null (or omitted) if no lock period is needed.  
  • kernel_address and owner are the standard fields for contract messaging and ownership control.  
  • In this example, two addresses share 80% and 20%.

You can adapt or extend each component (especially the “Crowdfund” part) as needed for more advanced behaviors, such as hooking into a Marketplace ADO for the actual buy/transfer logic of NFTs.